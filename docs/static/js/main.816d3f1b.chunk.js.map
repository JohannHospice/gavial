{"version":3,"sources":["components/Reader/index.jsx","components/App/index.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","imgBox","content","backgroundColor","borderColor","borderStyle","height","width","display","position","Reader","links","useTheme","useState","index","setIndex","classes","console","log","previousPage","nextPage","length","handleUserKeyPress","useCallback","event","key","preventDefault","useEffect","document","addEventListener","removeEventListener","Grid","container","spacing","id","style","justifyContent","Box","bottom","top","left","flexDirection","IconButton","color","disabled","onClick","fontSize","right","window","scroll","map","link","i","item","xs","justify","className","background","backgroundSize","backgroundPositionX","root","margin","buttons","logo","App","url","setURL","query","setQuery","setLinks","number","setNumber","prefersDarkMode","useMediaQuery","loading","setLoading","useMemo","createMuiTheme","palette","type","secondary","main","loadURL","a","split","base","extension","urlFormed","fetch","response","DOMParser","text","doc","parseFromString","nodeList","body","querySelectorAll","Array","from","selected","getAttribute","setTimeout","error","save","JSON","parse","localStorage","getItem","ThemeProvider","CssBaseline","overflowY","Container","maxWidth","alignItems","mt","onSubmit","Typography","align","textAlign","flexWrap","lg","md","Tooltip","title","TextField","label","variant","value","onChange","target","Button","size","setItem","stringify","py","CircularProgress","aria-label","reader","getElementById","scrollIntoView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.816d3f1b.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport { Box, IconButton, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  imgBox: {\r\n    \"&::after\": {\r\n      content: \"Voyez cette boÃ®te orange.\",\r\n      backgroundColor: \"#FFBA10\",\r\n      borderColor: \"black\",\r\n      borderStyle: \"dotted\",\r\n      height: \"100px\",\r\n      width: \"100px\",\r\n      display: \"block\",\r\n      position: \"relative\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst scrollToPage = (inverse) => {\r\n  const next = Array.from(document.querySelectorAll(\".Reader-page\")).reduce(\r\n    (acc, cur) => {\r\n      if (acc) {\r\n        if (inverse) {\r\n          const { bottom: curTop } = cur.getBoundingClientRect();\r\n          const { bottom: accTop } = acc.getBoundingClientRect();\r\n          if (accTop < curTop && accTop >= 0) return acc;\r\n        } else {\r\n          const { top: curTop } = cur.getBoundingClientRect();\r\n          const { top: accTop } = acc.getBoundingClientRect();\r\n          if (accTop < curTop && accTop > 0) return acc;\r\n        }\r\n      }\r\n      return cur;\r\n    },\r\n    undefined\r\n  );\r\n\r\n  if (next) next.scrollIntoView();\r\n};\r\n\r\nfunction Reader({ links }) {\r\n  const theme = useTheme();\r\n  const [index, setIndex] = useState(0);\r\n  const classes = useStyles();\r\n  console.log(links);\r\n  const previousPage = () => index > 0 && setIndex(index - 2);\r\n  const nextPage = () => index < links.length - 1 && setIndex(index + 2);\r\n\r\n  const handleUserKeyPress = useCallback(\r\n    (event) => {\r\n      console.log(event.key, index);\r\n      if (event.key === \"ArrowLeft\") {\r\n        event.preventDefault();\r\n        previousPage();\r\n      }\r\n      if (event.key === \"ArrowRight\") {\r\n        event.preventDefault();\r\n        nextPage();\r\n      }\r\n    },\r\n    [index]\r\n  );\r\n\r\n  const goTop = () => window.scroll(0, 0);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleUserKeyPress);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleUserKeyPress);\r\n    };\r\n  }, [handleUserKeyPress]);\r\n\r\n  useEffect(() => {\r\n    setIndex(0);\r\n  }, [links]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      id=\"reader\"\r\n      style={{\r\n        position: \"relative\",\r\n        justifyContent: \"flex-end\",\r\n        // height: \"100vh\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: 0,\r\n          top: 0,\r\n          left: theme.spacing(2),\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          color=\"secondary\"\r\n          disabled={index <= 0}\r\n          onClick={previousPage}\r\n        >\r\n          <ChevronLeftIcon fontSize=\"large\" />\r\n        </IconButton>\r\n      </Box>\r\n      <Box\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: 0,\r\n          top: 0,\r\n          right: theme.spacing(2),\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          color=\"secondary\"\r\n          disabled={index >= links.length + 1}\r\n          onClick={nextPage}\r\n        >\r\n          <ChevronRightIcon fontSize=\"large\" />\r\n        </IconButton>\r\n      </Box>\r\n      <Box\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: theme.spacing(2),\r\n          right: theme.spacing(2),\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <IconButton color=\"default\" onClick={goTop}>\r\n          <KeyboardArrowUpIcon fontSize=\"large\" />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      {links &&\r\n        links.map((link, i) => (\r\n          <Grid\r\n            style={{\r\n              display: index === i || index === i + 1 ? \"flex\" : \"none\",\r\n              height: \"100vmin\",\r\n            }}\r\n            container\r\n            item\r\n            xs={6}\r\n            justify={i % 2 && \"flex-end\"}\r\n            display=\"flex\"\r\n          >\r\n            <Box\r\n              className={classes.imgBox}\r\n              style={{\r\n                background: `url(${link}) no-repeat center`,\r\n                backgroundSize: \"contain\",\r\n                width: \"100%\",\r\n                backgroundPositionX: i % 2 ? \"right\" : \"left\",\r\n              }}\r\n            >\r\n              {/* <img\r\n                src={link}\r\n                alt=\"page 1\"\r\n                key={i}\r\n                style={{ maxHeight: \"100vh\", maxWidth: \"49vw\" }}\r\n              /> */}\r\n            </Box>\r\n          </Grid>\r\n        ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Reader;\r\n","import { useEffect, useMemo, useState } from \"react\";\nimport Reader from \"../Reader\";\nimport \"./App.css\";\nimport {\n  Button,\n  TextField,\n  Container,\n  Box,\n  Typography,\n  IconButton,\n  CircularProgress,\n  Tooltip,\n  Grid,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  buttons: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  logo: {\n    height: \"50vmin\",\n  },\n}));\nfunction App() {\n  const [url, setURL] = useState();\n  const [query, setQuery] = useState();\n  const [links, setLinks] = useState();\n\n  const [number, setNumber] = useState();\n  // const [scanUrl, setScanURL] = useState();\n  // const [scanNumber, setScanNumber] = useState();\n  // const [scanPage, setScanPage] = useState();\n\n  // const [page, setPage] = useState();\n  const classes = useStyles();\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const [loading, setLoading] = useState();\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n          secondary: {\n            main: \"#82969f\",\n          },\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  const saveInLocalStorage = () => {\n    localStorage.setItem(\n      \"save\",\n      JSON.stringify({\n        url,\n        query,\n        number,\n      })\n    );\n  };\n\n  const loadURL = async () => {\n    setLoading(true);\n    // console.log(url);\n    try {\n      if (url && query && number) {\n        const [base, extension] = url.split(\"{number}\");\n        const urlFormed = base + number + extension;\n        // const res = /.+?\\{(.+)\\}.*/.exec(url);\n\n        const response = await fetch(\n          \"https://cors-anywhere.herokuapp.com/\" + urlFormed //selectInput(number)\n        );\n        console.log(response);\n        var doc = new DOMParser().parseFromString(\n          await response.text(),\n          \"text/html\"\n        );\n        const nodeList = doc.body.querySelectorAll(query);\n        const links = Array.from(nodeList).map((selected) =>\n          selected.getAttribute(\"src\")\n        );\n\n        setLinks(links);\n        setTimeout(() => {\n          setLoading(false);\n        }, 1000);\n      }\n    } catch (error) {\n      console.error(error);\n      setLoading(false);\n    }\n  };\n\n  const scrollToPages = () => {\n    const reader = document.getElementById(\"reader\");\n    console.log(reader);\n    if (reader) reader.scrollIntoView();\n  };\n\n  useEffect(() => {\n    try {\n      const save = JSON.parse(localStorage.getItem(\"save\"));\n      if (save) {\n        setURL(save.url);\n        setQuery(save.query);\n        setNumber(save.number);\n      }\n    } catch (error) {}\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box display=\"flex\" flexDirection=\"column\" overflowY=\"hidden\">\n        <Container maxWidth=\"lg\">\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            {/* <img src={logo} className={classes.logo} alt=\"logo\" /> */}\n            <div className=\"glitch-container\">\n              <div className=\"glitch\">\n                {Array.from({ length: 5 }, (i) => (\n                  <div className=\"glitch__img\" key={i}></div>\n                ))}\n              </div>\n            </div>\n            <Box mt={4} display=\"flex\" flexDirection=\"column\" width=\"100%\">\n              <form\n                className={classes.root}\n                onSubmit={(event) => {\n                  event.preventDefault();\n                  loadURL();\n                }}\n              >\n                <Box mt={4}>\n                  <Typography align=\"center\">\n                    Entrez le scan que vous dÃ©sirez lire.\n                  </Typography>\n                </Box>\n                <Box mt={2} textAlign=\"center\">\n                  <Box display=\"flex\" justifyContent=\"center\" flexWrap=\"wrap\">\n                    <Grid container spacing={2}>\n                      <Grid item lg={6} md={12} xs={12}>\n                        <Tooltip\n                          title={`Saisissez \"{number}\" Ã  l'emplacement du numÃ©ro de scan.`}\n                        >\n                          <TextField\n                            style={{ width: \"100%\" }}\n                            label=\"URL du site\"\n                            variant=\"filled\"\n                            value={url}\n                            onChange={({ target: { value } }) => setURL(value)}\n                          />\n                        </Tooltip>\n                      </Grid>\n                      <Grid item lg={3} md={6} xs={12}>\n                        <Tooltip\n                          title={`Le sÃ©lecteur css dÃ©teminant les images Ã  rÃ©cupÃ©rer.`}\n                        >\n                          <TextField\n                            label=\"Selecteur d'images\"\n                            style={{ width: \"100%\" }}\n                            variant=\"filled\"\n                            value={query}\n                            onChange={({ target: { value } }) =>\n                              setQuery(value)\n                            }\n                          />\n                        </Tooltip>\n                      </Grid>\n                      <Grid item lg={3} md={6} xs={12}>\n                        <TextField\n                          style={{ width: \"100%\" }}\n                          label=\"NumÃ©ro de scan\"\n                          type=\"number\"\n                          variant=\"filled\"\n                          value={number}\n                          onChange={({ target: { value } }) => setNumber(value)}\n                        />\n                      </Grid>\n                    </Grid>\n                  </Box>\n                  <Box className={classes.buttons}>\n                    <Tooltip title=\"Se souvenir des paramÃ¨tre\">\n                      <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"muted\"\n                        type=\"button\"\n                        onClick={saveInLocalStorage}\n                      >\n                        Sauvegarder\n                      </Button>\n                    </Tooltip>\n                    <Button\n                      variant=\"contained\"\n                      size=\"large\"\n                      color=\"secondary\"\n                      type=\"submit\"\n                    >\n                      Charger\n                    </Button>\n                  </Box>\n                </Box>\n              </form>\n              {/* <Divider\n                orientation=\"vertical\"\n                flexItem\n                style={{\n                  marginLeft: theme.spacing(2),\n                  marginRight: theme.spacing(2),\n                }}\n              />\n              <form\n                className={classes.root}\n                onSubmit={(event) => {\n                  event.preventDefault();\n                  loadURL2();\n                }}\n              >\n                <Box mt={4}>\n                  <Typography align=\"center\">\n                    Entrez le scan que vous dÃ©sirez lire.\n                  </Typography>\n                </Box>\n                <Box mt={2} textAlign=\"center\">\n                  <Box display=\"flex\" justifyContent=\"center\" flexWrap=\"wrap\">\n                    <TextField\n                      label=\"URL des scans\"\n                      variant=\"filled\"\n                      value={scanUrl}\n                      onChange={({ target: { value } }) => setScanURL(value)}\n                    />\n                    <TextField\n                      label=\"NumÃ©ro de scan\"\n                      type=\"number\"\n                      variant=\"filled\"\n                      value={scanNumber}\n                      onChange={({ target: { value } }) => setScanNumber(value)}\n                    />\n                    <TextField\n                      label=\"Page du scan\"\n                      type=\"number\"\n                      variant=\"filled\"\n                      value={scanPage}\n                      onChange={({ target: { value } }) => setScanPage(value)}\n                    />\n                  </Box>\n                  <Box className={classes.buttons}>\n                    <Tooltip title=\"Se souvenir des paramÃ¨tre\">\n                      <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"muted\"\n                        type=\"button\"\n                        onClick={saveInLocalStorage}\n                      >\n                        Sauvegarder\n                      </Button>\n                    </Tooltip>\n                    <Button\n                      variant=\"contained\"\n                      size=\"large\"\n                      color=\"secondary\"\n                      type=\"submit\"\n                    >\n                      Charger\n                    </Button>\n                  </Box>\n                </Box>\n              </form> */}\n            </Box>\n\n            <Box display=\"flex\" justifyContent=\"center\" py={4}>\n              {loading ? (\n                <CircularProgress color=\"secondary\" />\n              ) : (\n                links && (\n                  <IconButton\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    onClick={scrollToPages}\n                  >\n                    <ExpandMoreIcon fontSize=\"large\" />\n                  </IconButton>\n                )\n              )}\n            </Box>\n          </Box>\n        </Container>\n        <Container\n          style={{\n            maxWidth: \"100vw\",\n          }}\n        >\n          {!loading && links && <Reader links={links} />}\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}